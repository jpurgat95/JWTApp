@page "/register"
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

<h3>Register</h3>

<EditForm Model="user" OnSubmit="HandleRegister">
    <label for="username">Name</label>
    <InputText id="username" @bind-Value="user.Username" />
    <label for="password">Password</label>
    <InputText id="password" @bind-Value="user.Password" type="password" />
    
    <label for="password2">Password</label>
    <InputText id="password2" @bind-Value="password2" type="password" />
    <button type="submit" class="btn btn-primary">Do it!</button>
</EditForm>

@code {
    UserDto user = new UserDto();
    string password2;
    async Task HandleRegister()
    {
        if (user.Password == password2)
        {
            var result = await Http.PostAsJsonAsync("api/auth", user);
            if (result.IsSuccessStatusCode)
            { 
                var resultLogin = await Http.PostAsJsonAsync("api/auth/login", user);
                if (resultLogin.IsSuccessStatusCode)
                {
                    var token = await resultLogin.Content.ReadAsStringAsync();
                    //Console.WriteLine(token);
                    await LocalStorage.SetItemAsync("token", token);
                    await AuthStateProvider.GetAuthenticationStateAsync();
                    NavigationManager.NavigateTo("");
                }
            }
        }
        else
        {
           //alert to do
        }
    }
}
